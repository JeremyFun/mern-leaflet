{"ast":null,"code":"function _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nimport { Tooltip as LeafletTooltip } from 'leaflet';\nimport PropTypes from 'prop-types';\nimport DivOverlay from './DivOverlay';\nimport layer from './propTypes/layer';\nimport map from './propTypes/map';\n\nvar Tooltip = function (_DivOverlay) {\n  _inherits(Tooltip, _DivOverlay);\n\n  function Tooltip() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _DivOverlay.call.apply(_DivOverlay, [this].concat(args))), _this), _this.onTooltipOpen = function (_ref) {\n      var tooltip = _ref.tooltip;\n\n      if (tooltip === _this.leafletElement) {\n        _this.onOpen();\n      }\n    }, _this.onTooltipClose = function (_ref2) {\n      var tooltip = _ref2.tooltip;\n\n      if (tooltip === _this.leafletElement) {\n        _this.onClose();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Tooltip.prototype.createLeafletElement = function createLeafletElement(props) {\n    return new LeafletTooltip(this.getOptions(props), this.context.popupContainer);\n  };\n\n  Tooltip.prototype.componentWillMount = function componentWillMount() {\n    _DivOverlay.prototype.componentWillMount.call(this);\n\n    this.leafletElement = this.createLeafletElement(this.props);\n    this.context.popupContainer.on({\n      tooltipopen: this.onTooltipOpen,\n      tooltipclose: this.onTooltipClose\n    });\n  };\n\n  Tooltip.prototype.componentDidMount = function componentDidMount() {\n    this.context.popupContainer.bindTooltip(this.leafletElement);\n  };\n\n  Tooltip.prototype.componentWillUnmount = function componentWillUnmount() {\n    var popupContainer = this.context.popupContainer;\n    this.removeContent();\n    popupContainer.off({\n      tooltipopen: this.onTooltipOpen,\n      tooltipclose: this.onTooltipClose\n    });\n\n    if (popupContainer._map != null) {\n      popupContainer.unbindTooltip(this.leafletElement);\n    }\n\n    _DivOverlay.prototype.componentWillUnmount.call(this);\n  };\n\n  return Tooltip;\n}(DivOverlay);\n\nTooltip.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func\n};\nTooltip.contextTypes = {\n  map: map,\n  popupContainer: layer,\n  pane: PropTypes.string\n};\nTooltip.defaultProps = {\n  pane: 'tooltipPane'\n};\nexport default Tooltip;","map":{"version":3,"sources":["/home/kango/Documents/MERN Projects/react-leaflet-master/client/node_modules/react-leaflet/es/Tooltip.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","setPrototypeOf","Tooltip","LeafletTooltip","PropTypes","DivOverlay","layer","map","_DivOverlay","_temp","_this","_ret","_len","arguments","args","Array","_key","apply","concat","onTooltipOpen","_ref","tooltip","leafletElement","onOpen","onTooltipClose","_ref2","onClose","createLeafletElement","props","getOptions","context","popupContainer","componentWillMount","on","tooltipopen","tooltipclose","componentDidMount","bindTooltip","componentWillUnmount","removeContent","off","_map","unbindTooltip","propTypes","children","node","func","contextTypes","pane","string","defaultProps"],"mappings":"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","sourcesContent":["function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\nimport { Tooltip as LeafletTooltip } from 'leaflet';\nimport PropTypes from 'prop-types';\n\nimport DivOverlay from './DivOverlay';\nimport layer from './propTypes/layer';\nimport map from './propTypes/map';\n\nvar Tooltip = function (_DivOverlay) {\n  _inherits(Tooltip, _DivOverlay);\n\n  function Tooltip() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _DivOverlay.call.apply(_DivOverlay, [this].concat(args))), _this), _this.onTooltipOpen = function (_ref) {\n      var tooltip = _ref.tooltip;\n\n      if (tooltip === _this.leafletElement) {\n        _this.onOpen();\n      }\n    }, _this.onTooltipClose = function (_ref2) {\n      var tooltip = _ref2.tooltip;\n\n      if (tooltip === _this.leafletElement) {\n        _this.onClose();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Tooltip.prototype.createLeafletElement = function createLeafletElement(props) {\n    return new LeafletTooltip(this.getOptions(props), this.context.popupContainer);\n  };\n\n  Tooltip.prototype.componentWillMount = function componentWillMount() {\n    _DivOverlay.prototype.componentWillMount.call(this);\n    this.leafletElement = this.createLeafletElement(this.props);\n\n    this.context.popupContainer.on({\n      tooltipopen: this.onTooltipOpen,\n      tooltipclose: this.onTooltipClose\n    });\n  };\n\n  Tooltip.prototype.componentDidMount = function componentDidMount() {\n    this.context.popupContainer.bindTooltip(this.leafletElement);\n  };\n\n  Tooltip.prototype.componentWillUnmount = function componentWillUnmount() {\n    var popupContainer = this.context.popupContainer;\n\n\n    this.removeContent();\n\n    popupContainer.off({\n      tooltipopen: this.onTooltipOpen,\n      tooltipclose: this.onTooltipClose\n    });\n    if (popupContainer._map != null) {\n      popupContainer.unbindTooltip(this.leafletElement);\n    }\n\n    _DivOverlay.prototype.componentWillUnmount.call(this);\n  };\n\n  return Tooltip;\n}(DivOverlay);\n\nTooltip.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func\n};\nTooltip.contextTypes = {\n  map: map,\n  popupContainer: layer,\n  pane: PropTypes.string\n};\nTooltip.defaultProps = {\n  pane: 'tooltipPane'\n};\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}